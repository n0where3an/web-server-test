### File            : web-server-test.yml
### Description     : Test pod for testing installed kubernetes
### Author          : Michael Yasko
### Version history :

apiVersion: v1
kind: Namespace
metadata:
  name: n0wm-ws-test
  labels:
    pod-security.kubernetes.io/enforce: restricted
#---
#apiVersion: v1
#kind: ResourceQuota
#metadata:
#  name: n0wm-test-resource-quota
#  namespace: n0wm-ws-test  # Укажите целевой namespace
#spec:
#  hard:
#    requests.cpu: "1"        # Максимум 1 CPU запрошено подами
#    requests.memory: "30Mi"   # Максимум 1 GiB памяти запрошено подами
#    limits.cpu: "1"          # Максимум 2 CPU может быть использовано
#    limits.memory: "120Mi"     # Максимум 2 GiB памяти может быть использовано
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n0wm-ws-test-deployment
  namespace: n0wm-ws-test
  labels:
    env: test
    app: n0wm-test-application
    tier: frontend
    owner: MichaelYasko
    project: n0wm-test-prj
spec:
  selector:
    matchLabels:
      project: n0wm-test-prj
  template:
    metadata:
      labels:
        env: test
        app: n0wm-test-application
        owner: MichaelYasko
        project: n0wm-test-prj
        monitoring: "true"
    spec:
      containers:
      - name: n0wm-test-prj-web
        image: n0where3an/testdocker:1.7
        securityContext:
          runAsUser: 1009
          runAsGroup: 1009
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            memory: "128Mi"
            cpu: "50m"
          requests:
            memory: "64Mi"
            cpu: "10m"
        env:
        - name: SERVER_PORT
          value: "8000"
        - name: WEB_MYSQL_HOST
          value: ""
        - name: WEB_MYSQL_PORT
          value: "3306"
        - name: WEB_MYSQL_USERNAME
          value: ""
        - name: WEB_MYSQL_PASSWORD
          value: ""
        - name: WEB_MYSQL_DBNAME
          value: ""
        - name: WEB_REDIS_HOST
          value: ""
        - name: WEB_REDIS_PORT
          value: "6379"
        - name: WEB_REDIS_DB
          value: "-1"
        ports:
        - containerPort: 8000
        - containerPort: 9100
          name: metrics
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /readycheck
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
          failureThreshold: 5
        startupProbe:
          httpGet:
            path: /startupcheck
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: n0wm-test-autoscaling
  namespace: n0wm-ws-test
  labels:
    env: test
    owner: MichaelYasko
    project: n0wm-test-prj
spec:
  scaleTargetRef:
    apiVersion: apps/v2
    kind: Deployment
    name: n0wm-ws-test-deployment
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 65
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70

---
apiVersion: v1
kind: Service
metadata:
  name: n0wm-test-deployment-autoscaling
  namespace: n0wm-ws-test
  labels:
    env: test
    app: n0wm-test-autoscaling
    owner: MichaelYasko
    project: n0wm-test-prj
spec:
  type: ClusterIP
  selector:
    project: n0wm-test-prj
    env: test
    owner: MichaelYasko
  ports:
    - name: app-listener
      protocol: TCP
      port: 8000
      targetPort: 8000
---
#Warning!!! It configured for nginx ingress controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: n0wm-ws-test
  namespace: n0wm-ws-test
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/rewrite-target: "/"
    certmanager.k8s.io/cluster-issuer: monitoring-issuer
spec:
  ingressClassName: nginx
#  tls:
#    - hosts:
#        - n0wm-ws-test.local
#      secretName: n0wm-ws-test-tls
  rules:
    - host: "n0wm-ws-test.local"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: n0wm-test-deployment-autoscaling
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: n0wm-ws-test-deny-all
  namespace: n0wm-ws-test
spec:
  podSelector: {}  # ally to all pods in namespace
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: n0wm-ws-test-allow-ingress-nginx-to-service
  namespace: n0wm-ws-test
spec:
  policyTypes:
  - Ingress
  - Egress
  podSelector:
    matchLabels:
      project:  n0wm-test-prj
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/instance: nginx-ingress-common
      namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - port: 8000
      protocol: TCP
  egress:
  - to:
    - podSelector:
        matchLabels:
          project: n0wm-test-prj
    ports:
    - port: 8000
      protocol: TCP
  - ports:
    - port: 53
      protocol: TCP
    - port: 53
      protocol: UDP
    - port: 80
      protocol: TCP
    - port: 443
      protocol: TCP
    to:
    - ipBlock:
        cidr: 0.0.0.0/0
#EOF
